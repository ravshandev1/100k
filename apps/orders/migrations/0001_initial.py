# Generated by Django 3.2.16 on 2022-12-23 13:16

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Yangi', 'Yangi'), ('Yetkazilmoqda', 'Yetkazilmoqda'), ('Yetkazib berildi', 'Yetkazib berildi'), ('Rad qilindi', 'Rad qilindi')], default='Yangi', max_length=212)),
                ('name', models.CharField(max_length=212)),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '998 [XX] [XXX XX XX]'. Up to 12 digits allowed.", regex='^998[0-9]{9}$')])),
                ('note', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.IntegerField(validators=[django.core.validators.RegexValidator(message="Card number must be entered in the format: '[XXXX] [XXXX] [XXXX] [XXXX]'. Up to 16 digits allowed.", regex='[0-9]{16}$')])),
                ('summa', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Stream',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('summa', models.IntegerField(default=0)),
                ('orders', models.ManyToManyField(related_name='stream', to='orders.Order')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
    ]
